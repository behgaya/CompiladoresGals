import javax.swing.*;

import java.awt.event.*;
import java.io.*;
import java.util.List;
import java.awt.Color;
import java.awt.Container;
import java.awt.Image;

import javax.swing.table.DefaultTableModel;

public class MainWindow extends javax.swing.JFrame {
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        sourceInput = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        buttonCompile = Button.createButton(this, "icons/compile.png", 30, 30);
        buttonSave = Button.createButton(this, "icons/save.png", 30, 30);
        buttonOpen = Button.createButton(this, "icons/openFile.png", 30, 30);
        buttonSaveAs = Button.createButton(this, "icons/saveAs.png", 30, 30);
        buttonDarkMode = Button.createButton(this, "icons/dark.png", 30, 30);
        buttonCustomCode = Button.createButton(this, "icons/code.png", 30, 30);
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IDE do Professor");

        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button.buttonSaveActionPerformed(evt, console, sourceInput);
            }
        });
        buttonSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button.buttonSaveAsActionPerformed(evt, console, sourceInput);
            }
        });
        buttonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button.buttonOpenActionPerformed(evt, console, sourceInput);
            }
        });
        buttonCompile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button.buttonCompileActionPerformed(evt, sourceInput, sem, symbols, console, table);
            }
        });
        buttonDarkMode.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                toggleDarkMode();
            }
        });
        buttonCustomCode.addActionListener(new ActionListener(){
            public void actionPerformed(ActionEvent evt) {
                Button.buttonPasteCustomCode(evt, sourceInput);
            }
        });

        sourceInput.setColumns(20);
        sourceInput.setFont(new java.awt.Font("Helvetica Neue", 0, 18));
        sourceInput.setRows(5);

        jScrollPane1.setViewportView(sourceInput);
        jScrollPane2.setViewportView(console);

        console.setEditable(false);
        console.setColumns(20);
        console.setFont(new java.awt.Font("Helvetica Neue", 0, 14));
        console.setLineWrap(true);
        console.setRows(5);
        console.setTabSize(4);


        symbols = sem.symbolTableShow.getSymbols();
        
        String[] columnNames = { "ID", "Tipo", "Inicializado", "Usado", "Escopo", "Parametro", "Posição", "Vetor", "Matriz", "Referência", "Função","Procedimento" };
        Object[][] data = new Object[symbols.size()][12];

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        table = new JTable(model);

        // Adiciona a tabela a um JScrollPane
        JScrollPane scrollPane = new JScrollPane(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(buttonSave)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonSaveAs)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonOpen)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonCompile)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonDarkMode) // Adiciona o botão Modo Escuro
                    .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonCustomCode) // Adiciona o novo botão aqui
                    .addContainerGap())
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)
                        .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)) // Adiciona o JScrollPane aqui
                    .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonSave)
                        .addComponent(buttonSaveAs)
                        .addComponent(buttonOpen)
                        .addComponent(buttonCompile)
                        .addComponent(buttonDarkMode) // Adiciona o botão Modo Escuro
                    )
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(buttonCustomCode) // Adiciona o novo botão aqui
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE) // Adiciona o JScrollPane aqui
                    .addContainerGap()
                )
        );
        
        pack();
    }


    private void setComponentColors(Container container, JButton[] buttons) {
        Color backgroundColor;
        Color foregroundColor;

        if (isDarkMode) {
            backgroundColor = Color.darkGray;
            foregroundColor = Color.white;

        } else {
            backgroundColor = null;
            foregroundColor = Color.black;
        }

        container.setBackground(backgroundColor);

        for (JButton button : buttons) {
            button.setBackground(backgroundColor);
            button.setForeground(foregroundColor);
        }

        sourceInput.setBackground(backgroundColor);
        sourceInput.setForeground(foregroundColor);

        console.setBackground(backgroundColor);
        console.setForeground(foregroundColor);
    }


    private void toggleDarkMode() {
        isDarkMode = !isDarkMode;
        setComponentColors(this.getContentPane(),
                new JButton[] { buttonSave, buttonSaveAs, buttonOpen, buttonCompile, buttonDarkMode });
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCompile;
    private javax.swing.JTextArea console;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea sourceInput;
    private JTable table;
    private JButton buttonSave;
    private JButton buttonOpen;
    private JButton buttonSaveAs;
    private JButton buttonDarkMode;
    private JButton buttonCustomCode;

    private boolean isDarkMode = false;
    private Semantico sem = new Semantico();
    private List<Symbol> symbols;

    // End of variables declaration//GEN-END:variables
}
